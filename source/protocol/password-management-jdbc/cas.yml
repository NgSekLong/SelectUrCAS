cas.authn.jdbc.query: 
  - user: root
    password: ThisIsThePasswordForRoot
    driver-class: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${PROTOCOL_PASSWORD_MANAGEMENT_JDBC}/${PROTOCOL_PASSWORD_MANAGEMENT_JDBC}
    sql: SELECT * FROM pm_table_accounts WHERE userid=?
    field-password: password
    #No password encoding
    password-encoder.type: NONE


cas.authn.pm:
  enabled: true
  # Allow any password
  policy-pattern: ^.*
  reset.security-questions-enabled: true
  auto-login: true
  reset.mail:
    from: castesting@example.org
    text: CAS Password Management JDBC Path is %s
    subject: Testing Password Management JDBC
  jdbc: 
    user: root
    password: ThisIsThePasswordForRoot
    driver-class: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${PROTOCOL_PASSWORD_MANAGEMENT_JDBC}/${PROTOCOL_PASSWORD_MANAGEMENT_JDBC}
    sql-security-questions: SELECT question, answer FROM pm_table_questions WHERE userid=?

    sql-find-email: SELECT email FROM pm_table_accounts WHERE userid=?
    # Actually no phone setup, so set this to null
    sql-find-phone: SELECT NULL FROM pm_table_accounts WHERE userid=?
    sql-find-user: SELECT userid FROM pm_table_accounts WHERE email=?
    sql-change-password: UPDATE pm_table_accounts SET password=? WHERE userid=?
    autocommit: true
    #No password encoding
    password-encoder.type: NONE